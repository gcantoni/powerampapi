<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE project [
       <!ENTITY add-proguard-release SYSTEM "../add-proguard.xml">
]>


<project
	name="Poweramp-Standard-Widget-Pack"
	default="dist">
<!--
	&add-proguard-release;
-->

	<property
		name="version.num"
		value="1" />

	<property name="musixmatch.jar" value=""/>
	
	<buildnumber
		file="build.num" />

	<property
		name="version.prefix"
		value="2.1" />

	<!-- The local.properties file is created and updated by the 'android' tool. It contains the path to the SDK. It should *NOT* be checked into Version 
		Control Systems. -->
	<property
		file="local.properties" />

	<!-- The build.properties file can be created by you and is never touched by the 'android' tool. This is the place to change some of the default property 
		values used by the Ant rules. Here are some properties you may want to change/update: source.dir The name of the source directory. Default is 'src'. out.dir 
		The name of the output directory. Default is 'bin'. Properties related to the SDK location or the project target should be updated using the 'android' 
		tool with the 'update' action. This file is an integral part of the build system for your application and should be checked into Version Control Systems. -->
	<property
		file="build.properties" />

	<!-- The default.properties file is created and updated by the 'android' tool, as well as ADT. This file is an integral part of the build system for your 
		application and should be checked into Version Control Systems. -->
	<property
		file="default.properties" />


	<!-- Custom Android task to deal with the project target, and import the proper rules. This requires ant 1.6.0 or above. -->
	<path
		id="android.antlibs">
		<pathelement
			path="${sdk.dir}/tools/lib/anttasks.jar" />
		<pathelement
			path="${sdk.dir}/tools/lib/sdklib.jar" />
		<pathelement
			path="${sdk.dir}/tools/lib/androidprefs.jar" />
	</path>

	<taskdef
		name="setup"
		classname="com.android.ant.SetupTask"
		classpathref="android.antlibs" />

	<!--
	<target name="-post-compile" depends="-dex-obfuscate">
	</target>
	-->


	<!-- extension targets. Uncomment the ones where you want to do custom work in between standard targets -->
	<!-- <target name="-pre-build"> </target> <target name="-pre-compile"> </target> [This is typically used for code obfuscation. Compiled code location: 
		${out.classes.absolute.dir} If this is not done in place, override ${out.dex.input.absolute.dir}] <target name="-post-compile"> </target> -->

	<!-- Execute the Android Setup task that will setup some properties specific to the target, and import the build rules files. The rules file is imported 
		from <SDK>/platforms/<target_platform>/ant/ant_rules_r#.xml To customize existing targets, there are two options: - Customize only one target: - copy/paste 
		the target into this file, *before* the <setup> task. - customize it to your needs. - Customize the whole script. - copy/paste the content of the rules 
		files (minus the top node) into this file, *after* the <setup> task - disable the import of the rules by changing the setup task below to <setup import="false" 
		/>. - customize to your needs. -->
	<xslt
		in='AndroidManifest.xml'
		out='versioned.AndroidManifest.xml'
		style='../version.xsl'>
		<param
			name='VERSION'
			expression="${build.number}" />
		<param
			name='VERSIONNAME'
			expression="${version.prefix}-build-${build.number}" />
	</xslt>
	
	<copy file="versioned.AndroidManifest.xml" tofile="AndroidManifest.xml"	/>


	<setup />

	<target name="dist" depends="clean, release">
		<property name="release.apk" value="${out.absolute.dir}/${ant.project.name}-release.apk"/>
		<property name="version.tag" value="${version.prefix}-build-${build.number}"/>
		<property name="dist.dir" value="dist/${version.tag}"/>

		<mkdir dir="${dist.dir}"/>
		<copy 
			file="${release.apk}" 
			tofile="${dist.dir}/${ant.project.name}-${version.tag}.apk"
		/>
	</target>
</project>
